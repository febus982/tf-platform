---
- name: Destroy remote state infrastructure
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - vars/vars.yml
    - "{{ playbook_dir }}/../config/terraform.yml"
  tasks:
  - name: "Copy state file from S3 bucket"
    aws_s3:
      bucket: "{{ bootstrap.aws_s3_bucket }}"
      object: "/0_bootstrap_aws_remote.tfstate"
      dest: "{{ playbook_dir }}/../terraform_stages/0_bootstrap_aws_local/terraform.tfstate"
      mode: get

  - name: "Initial bootstrap using local state"
    include_role:
      name: manage_terraform_stage
    when: bootstrap_secrets is not defined
    vars:
      stage_name: 0_bootstrap_aws_local
      state: absent
      terraform_variables:
        s3_bucket: "{{ bootstrap.aws_s3_bucket }}"
        dynamodb: "{{ bootstrap.aws_secret if bootstrap.aws_secret is defined else 'terraform' }}"
        iam_group: "{{ bootstrap.aws_iam_group if bootstrap.aws_iam_group is defined else 'terraform' }}"
        iam_user: "{{ bootstrap.aws_iam_user if bootstrap.aws_iam_user is defined else 'terraform' }}"
        secret: "{{ bootstrap.aws_secret if bootstrap.aws_secret is defined else 'terraform' }}"
      terraform_backend_config:
        path: "terraform.tfstate"
...